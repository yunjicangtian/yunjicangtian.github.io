<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>个人博客初开发</title>
    <url>/2020/11/28/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%88%9D%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<h1 id="基础学习"><a href="#基础学习" class="headerlink" title="基础学习"></a>基础学习</h1><h2 id="1-如何添加友链？"><a href="#1-如何添加友链？" class="headerlink" title="1.如何添加友链？"></a>1.<a href="https://www.jianshu.com/p/57dd558b2b42">如何添加友链？</a></h2><p><a href="https://www.jianshu.com/p/57dd558b2b42">点击标题或此</a></p>
<h2 id="markdown-preview-enhanced学习"><a href="#markdown-preview-enhanced学习" class="headerlink" title="markdown preview enhanced学习"></a>markdown preview enhanced学习</h2><p>一个基于VS code 的网站文本框架</p>
<ul>
<li><a href="https://www.bookstack.cn/read/mpe/zh-cn-readme.md">1号学区markdown preview enhanced文档</a></li>
<li><a href="https://guides.github.com/features/mastering-markdown/">2号学区,en,mmp好难总结</a><a id="more"></a>

</li>
</ul>
<h2 id="2-常用命令-初"><a href="#2-常用命令-初" class="headerlink" title="2.常用命令.初"></a>2.常用命令.初</h2><p>登录”git”</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git config --global user.name &quot;(你自己的登录名)&quot;</span><br><span class="line">git config --global user.emial &quot;(你自己用的登陆邮箱)&quot;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &#123;选项卡名&#125; &#x2F;&#x2F;创建新的页面选项卡</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &#123;文章名&#125; &#x2F;&#x2F;创建新文章</span><br></pre></td></tr></table></figure>
<h2 id="消灭-by-Hexo-amp-NexT-广告"><a href="#消灭-by-Hexo-amp-NexT-广告" class="headerlink" title="消灭 by Hexo &amp; NexT 广告"></a>消灭 by Hexo &amp; NexT 广告</h2><p>locale:D:\编程\webblog\themes\NexT_config.yml<br>Powered by Hexo &amp; NexT<br>后的值改为false,博客底部的 Hexo &amp; NexT消失</p>
<h2 id="关于Hexo-标签及分类的问题"><a href="#关于Hexo-标签及分类的问题" class="headerlink" title="关于Hexo 标签及分类的问题"></a>关于Hexo 标签及分类的问题</h2><h3 id="创建“分类”"><a href="#创建“分类”" class="headerlink" title="创建“分类”"></a>创建“分类”</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page categories</span><br></pre></td></tr></table></figure>
<p>categories文件夹下会有index.md这个文件，打开后默认内容是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories</span><br><span class="line">date: 2019-04-22 14:47:40</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>添加type: “categories”到内容中，添加后是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">date: 2019-04-24 15:30:30</span><br><span class="line">type: categories</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>保存并关闭文件。<br>给文章添加“categories”属性<br>打开需要添加分类的文章，为其添加categories属性。下方的categories:Hexo表示这篇文章添加到到“Hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 添加分类及标签</span><br><span class="line">date: 2017-05-26 12:12:57</span><br><span class="line">categories: Hexo</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。</p>
<h3 id="创建“标签”"><a href="#创建“标签”" class="headerlink" title="创建“标签”"></a>创建“标签”</h3><p>生成“标签”页并添加tpye属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ hexo new page tags</span><br></pre></td></tr></table></figure>
<p>在tags文件夹下，找到index.md这个文件，打开后默认内容是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-04-22 14:22:08</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>添加type: “tags”到内容中，添加后是这样的：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2019-04-24 15:40:24</span><br><span class="line">type: tags</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>保存并关闭文件。</p>
<h3 id="文章应用"><a href="#文章应用" class="headerlink" title="文章应用"></a>文章应用</h3><p>给文章添加“tags”属性,打开需要添加标签的文章，为其添加tags属性。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo 添加分类及标签</span><br><span class="line">date: 2019-04-24 15:40:24</span><br><span class="line">categories: </span><br><span class="line">           - Hexo</span><br><span class="line">tags:</span><br><span class="line">           - 博客</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p><a href="https://juejin.cn/post/6844903830216261645">原文链接</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>NexT细节</title>
    <url>/2020/11/29/NexT%E7%BB%86%E8%8A%82/</url>
    <content><![CDATA[<h1 id="Hexo-NexT文章断章语句"><a href="#Hexo-NexT文章断章语句" class="headerlink" title="Hexo/NexT文章断章语句"></a>Hexo/NexT文章断章语句</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure>
<h1 id="Hexo-NexT文章版权配置"><a href="#Hexo-NexT文章版权配置" class="headerlink" title="Hexo/NexT文章版权配置"></a>Hexo/NexT文章版权配置</h1><p>修改NexT主题的配置文件(./themes/next/_config.yml)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">creative_commons:</span><br><span class="line">  license: by-nc-sa</span><br><span class="line">  sidebar: true</span><br><span class="line">  post: true</span><br><span class="line">  language:</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.amdoing.com/the-post-copyright-in-hexo-next"><del>参考文章</del></a></p>
<a id="more"></a>

<h1 id="NexT-主题添加圆角效果"><a href="#NexT-主题添加圆角效果" class="headerlink" title="NexT 主题添加圆角效果"></a>NexT 主题添加圆角效果</h1><p>以 Pisces 模式为例，其他模式同理</p>
<p>themes/next/source/css/_schemes/Pisces/_sidebar.styl 添加 border-radius 属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.sidebar &#123;</span><br><span class="line">  display: none;</span><br><span class="line">  right: auto;</span><br><span class="line">  bottom: auto;</span><br><span class="line">  -webkit-transform: none;</span><br><span class="line">  border-radius:10px;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.sidebar-inner &#123;</span><br><span class="line">  box-sizing: border-box;</span><br><span class="line">  width: 240px;</span><br><span class="line">  color: $text-color;</span><br><span class="line">  background: white;</span><br><span class="line">  border-radius:10px;</span><br><span class="line">  &amp;.affix &#123; top: 0px; position: fixed; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>themes/next/source/css/_schemes/Pisces/_layout.styl添加 border-radius 属性</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.sidebar-position-right &#123;</span><br><span class="line">  .header-inner &#123; right: 0; border-radius:10px;&#125;</span><br><span class="line">  .content-wrap &#123; float: left; &#125;</span><br><span class="line">  .sidebar &#123; float: right; &#125;</span><br><span class="line"></span><br><span class="line">  .footer-inner:before &#123; float: right; &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="修改’-’标签"><a href="#修改’-’标签" class="headerlink" title="修改’#’标签"></a>修改’#’标签</h1><p>修改NexT主题的配置文件(./themes/next/layout/_macro/post.swig)<br>找到</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;%- set tag_indicate &#x3D; &#39;#&#39; %&#125;&gt;&#96;</span><br></pre></td></tr></table></figure>
<p>改<code>&lt;#&gt;</code>为</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;i class&#x3D;&quot;fa fa-tag&quot;&gt;&lt;&#x2F;i&gt;</span><br></pre></td></tr></table></figure>
<h1 id="统计时间，字数"><a href="#统计时间，字数" class="headerlink" title="统计时间，字数"></a>统计时间，字数</h1><ol>
<li>在Hexo的根目录下安装symbols_count_time<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-symbols-count-time</span><br></pre></td></tr></table></figure></li>
<li>配置Hexo站点配置文件<code>&lt;_config.yml&gt;</code><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 设置博客单词统计</span><br><span class="line">symbols_count_time:</span><br><span class="line">  # 文章字数统计</span><br><span class="line">  symbols: true</span><br><span class="line">  # 文章阅读时间统计</span><br><span class="line">  time: true</span><br><span class="line">  # 站点总字数统计</span><br><span class="line">  total_symbols: false</span><br><span class="line">  # 站点总阅读时间统计</span><br><span class="line">  total_time: false</span><br><span class="line">  exclude_codeblock: false</span><br></pre></td></tr></table></figure></li>
<li>配置NexT主题配置文件themes/next/_config.yml<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">  # Post wordcount display settings</span><br><span class="line"># Dependencies: https:&#x2F;&#x2F;github.com&#x2F;theme-next&#x2F;hexo-symbols-count-time</span><br><span class="line"># 设置博客单词统计</span><br><span class="line">symbols_count_time:</span><br><span class="line">  # 是否另起一行（true的话不和发表时间等同一行）</span><br><span class="line">  separated_meta: true</span><br><span class="line">  # 首页文章统计数量前是否显示文字描述（本文字数、阅读时长）</span><br><span class="line">  item_text_post: true</span><br><span class="line">  # 页面底部统计数量前是否显示文字描述（站点总字数、站点阅读时长）</span><br><span class="line">  item_text_total: true</span><br><span class="line">  # 平均字长</span><br><span class="line">  awl: 2</span><br><span class="line">  # 每分钟阅读字数</span><br><span class="line">  wpm: 300</span><br></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习</title>
    <url>/2020/12/04/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>机器学习是通过数据进行建模的技术。简而言之，机器学习的目的是得到一个模型。</p>
<h1 id="基本术语"><a href="#基本术语" class="headerlink" title="基本术语"></a>基本术语</h1><p>数据集，示例（样本），属性，属性值，属性空间，特征向量，<br>学习（训练），，训练数据，训练样本，训练集<br>标记，有标记的示例称为样例</p>
<h2 id="任务分类"><a href="#任务分类" class="headerlink" title="任务分类"></a>任务分类</h2><p>分类：预测或输出为离散值（人脸识别，动作识别）<br>二分类：（是否，正负，涨跌）<br>多分类：<br>聚类：<br>回归；预测或输出为连续值(房价预测，股票预测)</p>
<h1 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h1><ol>
<li>监督学习的目的：学习一个由in到out的映射（规则，模型）</li>
<li>模型集合称为假设空间（模型即假设）<br>假设空间中与训练集一致的假设组成的集合称版本空间</li>
<li>模型分概率模型（条件概率函数）和非概率模型(决策函数)</li>
<li>样例-&gt;学习系统-&gt;模型-&gt;预测系统<h1 id="学习方法-模型-策略-算法"><a href="#学习方法-模型-策略-算法" class="headerlink" title="学习方法=模型+策略+算法"></a>学习方法=模型+策略+算法</h1></li>
</ol>
]]></content>
      <categories>
        <category>机器学习</category>
      </categories>
      <tags>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title>机器学习</title>
    <url>/2020/12/15/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<p>[TOC]</p>
<h1 id="深度学习"><a href="#深度学习" class="headerlink" title="深度学习"></a>深度学习</h1><p>老实说，现在的我，还不懂什么是深度学习，迷茫，未知，促使我踏入这一领域。</p>
<ul>
<li>到底，什么是智慧？</li>
</ul>
]]></content>
      <categories>
        <category>深度学习</category>
      </categories>
      <tags>
        <tag>深度学习</tag>
      </tags>
  </entry>
  <entry>
    <title>人工智能综述</title>
    <url>/2020/12/18/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%BB%BC%E8%BF%B0/</url>
    <content><![CDATA[<h1 id="1"><a href="#1" class="headerlink" title="1."></a>1.</h1><figure class="highlight plain"><figcaption><span>&#123;engine:"twopi"&#125;</span></figcaption><table><tr><td class="code"><pre><span class="line">digraph G &#123;</span><br><span class="line"> 人工智能 -&gt; 机器学习 -&gt; 深度学习</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>人工智能</tag>
      </tags>
  </entry>
  <entry>
    <title>Python基础</title>
    <url>/2020/12/19/Python%E5%9F%BA%E7%A1%80/</url>
    <content><![CDATA[<h1 id="1-基础操作"><a href="#1-基础操作" class="headerlink" title="1.基础操作"></a>1.基础操作</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">age &#x3D; 20  		# 声明一个变量age 用来存储一个数字 20</span><br><span class="line">1+1		        # 基础数学加法</span><br><span class="line">print(&#39;Hello World!&#39;)   # 打印Hello World!</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h1 id="2-条件判断if"><a href="#2-条件判断if" class="headerlink" title="2.条件判断if"></a>2.条件判断if</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if 1 &#x3D;&#x3D; 2: # 如果 if 跟随的条件为 假 那么不执行属于if 的语句,然后寻找 else</span><br><span class="line">    print(&quot;假的&quot;)</span><br><span class="line">else: # 寻找到 else 之后 执行属于else中的语句</span><br><span class="line">    print(&quot;1&#x3D;&#x3D;2是假的&quot;)</span><br></pre></td></tr></table></figure>
 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1&#x3D;&#x3D;2是假的</span><br></pre></td></tr></table></figure>

<h1 id="3-循环操作"><a href="#3-循环操作" class="headerlink" title="3.循环操作"></a>3.循环操作</h1><h2 id="循环操作—for"><a href="#循环操作—for" class="headerlink" title="循环操作—for"></a>循环操作—for</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(2,5):</span><br><span class="line">    print(i)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
<h2 id="循环操作—while"><a href="#循环操作—while" class="headerlink" title="循环操作—while"></a>循环操作—while</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sum &#x3D; 0    #求1+2+3...+99</span><br><span class="line">n &#x3D; 99</span><br><span class="line">while n &gt; 0:</span><br><span class="line">    sum &#x3D; sum + n</span><br><span class="line">    n &#x3D; n - 1</span><br><span class="line">print(sum)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">4950</span><br></pre></td></tr></table></figure>
<h1 id="4-break、continue、pass"><a href="#4-break、continue、pass" class="headerlink" title="4.break、continue、pass"></a>4.break、continue、pass</h1><h2 id="break语句可以跳出-for-和-while-的循环体"><a href="#break语句可以跳出-for-和-while-的循环体" class="headerlink" title="break语句可以跳出 for 和 while 的循环体"></a>break语句可以跳出 for 和 while 的循环体</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n &#x3D; 1</span><br><span class="line">while n &lt;&#x3D; 100:</span><br><span class="line">    if n &gt; 10:</span><br><span class="line">        break</span><br><span class="line">    print(n)</span><br><span class="line">    n +&#x3D; 1</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td></tr></table></figure>
<h2 id="continue语句跳过当前循环，直接进行下一轮循环"><a href="#continue语句跳过当前循环，直接进行下一轮循环" class="headerlink" title="continue语句跳过当前循环，直接进行下一轮循环"></a>continue语句跳过当前循环，直接进行下一轮循环</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">n &#x3D; 1</span><br><span class="line">while n &lt; 10:</span><br><span class="line">    n &#x3D; n + 1</span><br><span class="line">    if n % 2 &#x3D;&#x3D; 0:</span><br><span class="line">        continue</span><br><span class="line">    print(n)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">5</span><br><span class="line">7</span><br><span class="line">9</span><br></pre></td></tr></table></figure>
<h2 id="pass是空语句，一般用做占位语句，不做任何事情"><a href="#pass是空语句，一般用做占位语句，不做任何事情" class="headerlink" title="pass是空语句，一般用做占位语句，不做任何事情"></a>pass是空语句，一般用做占位语句，不做任何事情</h2> <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for letter in &#39;Room&#39;:</span><br><span class="line">   if letter &#x3D;&#x3D; &#39;o&#39;:</span><br><span class="line">       pass</span><br><span class="line">       print(&#39;pass&#39;)</span><br><span class="line">   print(letter)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">R</span><br><span class="line">pass</span><br><span class="line">o</span><br><span class="line">pass</span><br><span class="line">o</span><br><span class="line">m</span><br></pre></td></tr></table></figure>
<h1 id="5-数据类型"><a href="#5-数据类型" class="headerlink" title="5.数据类型"></a>5.数据类型</h1><h2 id="数据类型—Number-数字"><a href="#数据类型—Number-数字" class="headerlink" title="数据类型—Number(数字)"></a>数据类型—Number(数字)</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#Python支持int, float, complex三种不同的数字类型</span><br><span class="line">a &#x3D; 3</span><br><span class="line">b &#x3D; 3.14</span><br><span class="line">c &#x3D; 3 + 4j</span><br><span class="line">print(type(a), type(b), type(c))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;class &#39;int&#39;&gt; &lt;class &#39;float&#39;&gt; &lt;class &#39;complex&#39;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="数据类型—String（字符串）"><a href="#数据类型—String（字符串）" class="headerlink" title="数据类型—String（字符串）"></a>数据类型—String（字符串）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#支持字符串拼接、截取等多种运算</span><br><span class="line">a &#x3D; &quot;Hello&quot;</span><br><span class="line">b &#x3D; &quot;Python&quot;</span><br><span class="line">print(&quot;a + b 输出结果：&quot;, a + b) #拼接</span><br><span class="line">print(&quot;a[1:4] 输出结果：&quot;, a[1:4]) #截取</span><br><span class="line">print(type(a))</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">a + b 输出结果： HelloPython</span><br><span class="line">a[1:4] 输出结果： ell</span><br><span class="line">&lt;class &#39;str&#39;&gt;</span><br></pre></td></tr></table></figure>
<h2 id="数据类型—List（列表）"><a href="#数据类型—List（列表）" class="headerlink" title="数据类型—List（列表）"></a>数据类型—List（列表）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#列表是写在方括号 [] 之间、用逗号分隔开的元素列表。</span><br><span class="line">#列表索引值以 0 为开始值，-1 为从末尾的开始位置。</span><br><span class="line">#列表里面也可以包含列表</span><br><span class="line">list &#x3D; [&#39;abcd&#39;, 786 , 2.23, &#39;runoob&#39;, 70.2]</span><br><span class="line">print(list[1:3])</span><br><span class="line"></span><br><span class="line">tinylist &#x3D; [123, &#39;runoob&#39;]</span><br><span class="line">print(list + tinylist)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[786, 2.23]</span><br><span class="line">[&#39;abcd&#39;, 786, 2.23, &#39;runoob&#39;, 70.2, 123, &#39;runoob&#39;]</span><br></pre></td></tr></table></figure>
<h2 id="数据类型—Tuple（元组）"><a href="#数据类型—Tuple（元组）" class="headerlink" title="数据类型—Tuple（元组）"></a>数据类型—Tuple（元组）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#tuple与list类似，不同之处在于tuple的元素不能修改。tuple写在小括号里，元素之间用逗号隔开。</span><br><span class="line">#元组的元素不可变，但可以包含可变对象，如list。</span><br><span class="line">t1 &#x3D; (&#39;abcd&#39;, 786 , 2.23, &#39;runoob&#39;, 70.2)</span><br><span class="line">t2 &#x3D; (1, )</span><br><span class="line">t3 &#x3D; (&#39;a&#39;, &#39;b&#39;, [&#39;A&#39;, &#39;B&#39;])</span><br><span class="line">t3[2][0] &#x3D; &#39;X&#39;</span><br><span class="line">print(t3)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(&#39;a&#39;, &#39;b&#39;, [&#39;X&#39;, &#39;B&#39;])</span><br></pre></td></tr></table></figure>
<h2 id="数据类型—dict（字典）"><a href="#数据类型—dict（字典）" class="headerlink" title="数据类型—dict（字典）"></a>数据类型—dict（字典）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#字典是无序的对象集合，使用键-值（key-value）存储，具有极快的查找速度。</span><br><span class="line">#键(key)必须使用不可变类型。</span><br><span class="line">#同一个字典中，键(key)必须是唯一的。</span><br><span class="line">d &#x3D; &#123;&#39;Michael&#39;: 95, &#39;Bob&#39;: 75, &#39;Tracy&#39;: 85&#125;</span><br><span class="line">print(d[&#39;Michael&#39;])</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">95</span><br></pre></td></tr></table></figure>
<h2 id="数据类型—set（集合）"><a href="#数据类型—set（集合）" class="headerlink" title="数据类型—set（集合）"></a>数据类型—set（集合）</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#set和dict类似，也是一组key的集合，但不存储value。由于key不能重复，所以，在set中，没有重复的key。</span><br><span class="line">#set是无序的，重复元素在set中自动被过滤。</span><br><span class="line">s &#x3D; set([1, 1, 2, 2, 3, 3])</span><br><span class="line">print(s)</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;1, 2, 3&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>人工智能</category>
      </categories>
      <tags>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/11/26/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>PCB基础知识</title>
    <url>/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本文摘抄<a href="https://www.cnblogs.com/ydvely521/category/1281622.html">东方大神</a>，稍作补充而成，在此感谢大神。<br>在电子行业有一个关键的部件叫做PCB(printed circuit board,印刷电路板)。这是一个太基础的部件，导致很多人都很难解释到底什么是PCB。这篇文章将会详细解释PCB的构成，以及在PCB的领域里面常用的一些术语。</p>
<a id="more"></a>
<p> 在接下来，我们将讨论PCB的组成，包括一些术语，简要的组装方法，以及简介PCB的设计过程。</p>
<p> <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/1.jpg" alt="www"></p>
<h2 id="What’s-a-PCB"><a href="#What’s-a-PCB" class="headerlink" title="What’s a PCB?"></a>What’s a PCB?</h2><p>PCB(Printed circuit board)是一个最普遍的叫法，也可以叫做“printed wiring boards” 或者 “printed wiring cards”。在PCB出现之前，电路是通过点到点的接线组成的。这种方法的可靠性很低，因为随着电路的老化，线路的破裂会导致线路节点的断路或者短路。</p>
<p>绕线技术是电路技术的一个重大进步，这种方法通过将小口径线材绕在连接点的柱子上，提升了线路的耐久性以及可更换性。</p>
<p> <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/2.jpg" alt="www"></p>
<p>（<em>1977年Z80计算机的绕线背板）</em></p>
<p>当电子行业从真空管、继电器发展到硅半导体以及集成电路的时候，电子元器件的尺寸和价格也在下降。电子产品越来越频繁的出现在了消费领域，促使厂商去寻找更小以及性价比更高的方案。于是，PCB诞生了。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/3.jpg" alt="www"></p>
<h2 id="Composition（组成）"><a href="#Composition（组成）" class="headerlink" title="Composition（组成）"></a>Composition（组成）</h2><p>PCB看上去像多层蛋糕或者千层面–制作中将不同的材料的层，通过热量和粘合剂压制到一起。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/4.jpg" alt="www"></p>
<p>从中间层开始吧。</p>
<h3 id="FR4"><a href="#FR4" class="headerlink" title="FR4"></a>FR4</h3><p>PCB的基材一般都是玻璃纤维。大多数情况下，PCB的玻璃纤维基材一般就指”FR4”这种材料。”FR4”这种固体材料给予了PCB硬度和厚度。除了FR4这种基材外，还有柔性高温塑料（聚酰亚胺或类似）上生产的柔性电路板等等。</p>
<p>你可能会发现有不同厚度的PCB；然而 SparkFun的产品的厚度大部分都是1.6mm（0.063’’）。有一些产品也采用了其它厚度，比如 LilyPad、Arudino Pro Micro boards采用了0.8mm的板厚。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/5.jpg" alt="www"></p>
<p>廉价的PCB和洞洞板（见上图）是由环氧树脂或酚这样的材料制成，缺乏 FR4那种耐用性，但是却便宜很多。当在这种板子上焊接东西时，将会闻到很大的异味。这种类型的基材，常常被用在很低端的消费品里面。酚类物质具有较低的热分解温度，焊接时间过长会导致其分解碳化，并且散发出难闻的味道。</p>
<h3 id="Copper（铜箔层）"><a href="#Copper（铜箔层）" class="headerlink" title="Copper（铜箔层）"></a>Copper（铜箔层）</h3><p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/6.jpg" alt="www"></p>
<p><em>（露铜的PCB，无阻焊&amp;丝印）</em></p>
<p>接下来介绍是很薄的铜箔层，生产中通过热量以及黏合剂将其压制倒基材上面。在双面板上，铜箔会压制到基材的正反两面。在一些低成本的场合，可能只会在基材的一面压制铜箔。当我们提及到”<strong>双面板</strong>“或者”<strong>两层板</strong>“的时候，指的是我们的千层面上有两层铜箔。当然，不同的PCB设计中，铜箔层的数量可能是1层这么少，或者比16层还多。</p>
<p>铜层的厚度种类比较多，而且是用重量做单位的，一般采用铜均匀的覆盖一平方英尺的重量（盎司oz）来表示。大部分PCB的铜厚是1oz，但是有一些大功率的PCB可能会用到2oz或者3oz的铜厚。将盎司(oz)每平方英尺换算一下，大概是 35um或者1.4mil的铜厚。</p>
<h3 id="Soldermask（阻焊）"><a href="#Soldermask（阻焊）" class="headerlink" title="Soldermask（阻焊）"></a>Soldermask（阻焊）</h3><p>在铜层上面的是阻焊层。这一层让PCB看起来是绿色的（或者是SparkFun的红色）。阻焊层覆盖住铜层上面的走线，防止PCB上的走线和其他的金属、焊锡或者其它的导电物体接触导致短路。阻焊层的存在，使大家可以在正确的地方进行焊接 ，并且防止了焊锡搭桥。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/7.jpg" alt="www"></p>
<p>在上图这个例子里，我们可以看到阻焊覆盖了PCB的大部分（包括走线），但是露出了银色的孔环以及SMD焊盘，以方便焊接。</p>
<p>一般来说，阻焊都是绿色的，但几乎所有的颜色可以用来做阻焊。SparkFun的板卡大部分是红色的，但是IOIO板卡用了白色，LilyPad板卡是紫色的。</p>
<h3 id="Silkscreen（丝印）"><a href="#Silkscreen（丝印）" class="headerlink" title="Silkscreen（丝印）"></a>Silkscreen（丝印）</h3><p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/8.jpg" alt="www"></p>
<p>在阻焊层上面，是白色的丝印层。在PCB的丝印层上印有字母、数字以及符号，这样可以方便组装以及指导大家更好地理解板卡的设计。我们经常会用丝印层的符号标示某些管脚或者LED的功能等。</p>
<p>丝印层是最最常见的颜色是白色，同样，丝印层几乎可以做成任何颜色。黑色，灰色，红色甚至是黄色的丝印层并不少见。然而，很少见到单个板卡上有多种丝印层颜色。</p>
<p>下面会介绍一些PCB方面的常用术语。</p>
<h2 id="Terminology（术语）"><a href="#Terminology（术语）" class="headerlink" title="Terminology（术语）"></a>Terminology（术语）</h2><p>现在你知道了PCB的结构组成，下面我们来看一下PCB相关的术语吧。</p>
<h3 id="孔环"><a href="#孔环" class="headerlink" title="孔环"></a>孔环</h3><p><strong>孔环</strong> – PCB上的金属化孔上的铜环。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/9.jpg" alt="www">      <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/10.jpg" alt="www"></p>
<p><em>Examples of annular rings.</em> 孔环的例子</p>
<h3 id="DRC"><a href="#DRC" class="headerlink" title="DRC"></a>DRC</h3><p><strong>DRC</strong> – 设计规则检查。一个检查设计是否包含错误的程序，比如，走线短路，走线太细，或者钻孔太小。</p>
<h3 id="钻孔命中"><a href="#钻孔命中" class="headerlink" title="钻孔命中"></a>钻孔命中</h3><p><strong>钻孔命中</strong> – 用来表示设计中要求的钻孔位置和实际的钻孔位置的偏差。钝钻头导致的不正确的钻孔中心是PCB制造里的普遍问题。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/11.jpg" alt="www"></p>
<p> 不是太准确的drill hit示意图</p>
<h3 id="（金）-手指"><a href="#（金）-手指" class="headerlink" title="（金）-手指"></a>（金）-手指</h3><p><strong>（金）-手指</strong> – 在板卡边上裸露的金属焊盘，一般用做连接两个电路板。比如计算机的扩展模块的边缘、内存条以及老的游戏卡。</p>
<h3 id="邮票孔"><a href="#邮票孔" class="headerlink" title="邮票孔"></a>邮票孔</h3><p><strong>邮票孔</strong> – 除了V-Cut外，另一种可选择的分板设计方法。用一些连续的孔形成一个薄弱的连接点，就可以容易将板卡从拼版上分割出来。SparkFun的Protosnap板卡是一个比较好的例子。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/12.jpg" alt="www"></p>
<p><em>ProtoSnap上的邮票孔使PCB能简单的弯折下来。</em></p>
<h3 id="焊盘"><a href="#焊盘" class="headerlink" title="焊盘"></a>焊盘</h3><p><strong>焊盘</strong> – 在PCB表面裸露的一部分金属，用来焊接器件。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/13.jpg" alt="www">   <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/14.jpg" alt="www"></p>
<p> 左边是 插件焊盘，右边是贴片焊盘</p>
<h3 id="拼板"><a href="#拼板" class="headerlink" title="拼板"></a>拼板</h3><p><strong>拼板</strong> – 一个由很多可分割的小电路板组成的大电路板。自动化的电路板生产设备在生产小板卡的时候经常会出问题，将几个小板卡组合到一起，可以加快生产速度。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/15.jpg" alt="www"><br>PCB拼板</p>
<h3 id="钢网"><a href="#钢网" class="headerlink" title="钢网"></a>钢网</h3><p><strong>钢网</strong> – 一个薄金属模板（也可以是塑料），在组装的时候，将其放在PCB上让焊锡透过某些特定部位。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/16.jpg" alt="www"></p>
<p>钢网</p>
<h3 id="Pick-and-place"><a href="#Pick-and-place" class="headerlink" title="Pick-and-place"></a>Pick-and-place</h3><p><strong>Pick-and-place</strong> - 将元器件放到线路板上的机器或者流程。</p>
<p>平面 – 线路板上一段连续的铜皮。一般是由边界来定义，而不是 路径。也称作”覆铜“</p>
<p> <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/17.jpg" alt="www"></p>
<p><em>图示PCB上大部分地方没有走线，但是有地的覆铜</em></p>
<h3 id="金属化过孔"><a href="#金属化过孔" class="headerlink" title="金属化过孔"></a>金属化过孔</h3><p><strong>金属化过孔</strong> – PCB上的一个孔，包含孔环以及电镀的孔壁。金属化过孔可能是一个插件的连接点，信号的换层处，或者是一个安装孔。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/18.jpg" alt="www"></p>
<p> <em>FABFM PCB</em>上的一个插件电阻。电阻的两个腿已经穿过了PCB的过孔。电镀的孔壁可以使PCB正反两面的走线连接到一起。</p>
<h3 id="Pogo-pin"><a href="#Pogo-pin" class="headerlink" title="Pogo pin"></a>Pogo pin</h3><p><strong>Pogo pin</strong> – 一个弹簧支撑的临时接触点，一般用作测试或烧录程序。</p>
<p> <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/19.jpg" alt="www"></p>
<p><em>有尖头的pogo pin, 在测试针床中用的很多。</em></p>
<h3 id="回流焊"><a href="#回流焊" class="headerlink" title="回流焊"></a>回流焊</h3><p><strong>回流焊</strong> – 将焊锡融化，使焊盘（SMD）和器件管脚连接到一起。</p>
<h3 id="丝印"><a href="#丝印" class="headerlink" title="丝印"></a>丝印</h3><p><strong>丝印</strong> – 在PCB板上的字母、数字、符号或者图形等。基本上每个板卡上只有一种颜色，并且分辨率相对比较低。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/20.jpg" alt="www"></p>
<p> <em>丝印指出了这个LED是电源指示灯。</em></p>
<h3 id="开槽"><a href="#开槽" class="headerlink" title="开槽"></a>开槽</h3><p><strong>开槽</strong> – 指的是PCB上任何不是圆形的洞。开槽可以电镀也可以不电镀。由于开槽需要额外的切割时间，有时会增加板卡的成本。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/21.jpg" alt="www"></p>
<p>在ProtoSnap - Pro Mini板卡上的复杂开槽。同样有很多邮票孔。注意: 由于开槽的刀具是圆形的，开槽的边缘不能完全做成直角。</p>
<p>###锡膏层<br><strong>锡膏层</strong> – 在往PCB上放置元器件之前，会通过钢网在表贴器件的焊盘上形成的一定厚度的锡膏层。在回流焊过程中，锡膏融化，在焊盘和器件管脚间建立可靠的电气和机械连接。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/22.jpg" alt="www"></p>
<p>在放置元器件之前，PCB上短暂的锡膏层，记得去了解一下钢网的定义。</p>
<h3 id="焊锡炉"><a href="#焊锡炉" class="headerlink" title="焊锡炉"></a>焊锡炉</h3><p><strong>焊锡炉</strong> – 焊接插件的炉子。一般里面有少量的熔融的焊锡，板卡在上面迅速的通过，就可以将暴露的管脚上锡焊接好。</p>
<h3 id="阻焊"><a href="#阻焊" class="headerlink" title="阻焊"></a>阻焊</h3><p><strong>阻焊</strong> – 为了防止短路、腐蚀以及其它问题，铜上面会覆盖一层保护膜。保护膜一般是绿色，也可能是其它颜色(SparkFun红色，Arduino蓝色，或者Apple黑色)。一般称作“阻焊”。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/23.jpg" alt="www"></p>
<p>*Solder mask covers up the signal traces but leaves the pads to solder to.*阻焊覆盖了信号线，但是露出了焊盘以便于焊接。</p>
<h3 id="连锡"><a href="#连锡" class="headerlink" title="连锡"></a>连锡</h3><p><strong>连锡</strong> – 器件上的两个相连的管脚，被一小滴焊锡错误的连接到了一起。</p>
<h3 id="表面贴装"><a href="#表面贴装" class="headerlink" title="表面贴装"></a>表面贴装</h3><p><strong>表面贴装</strong> – 一种组装的方法，器件只需要简单的放在板卡上，不需要将器件管脚穿过板卡上的过孔。</p>
<h3 id="热焊盘"><a href="#热焊盘" class="headerlink" title="热焊盘"></a>热焊盘</h3><p><strong>热焊盘</strong> – 指的是连接焊盘到平面间的一段短走线。如果焊盘没有做恰当的散热设计，焊接时很难将焊盘加热到足够的焊接温度。不恰当的散热焊盘设计，会感觉焊盘比较黏，并且回流焊的时间相对比较长。（译者注，一般热焊盘做在插件与波峰焊接触的一面。不知道这个文章里面为什么会提到reflow，reflow主要要考虑的是热平衡，防止立碑。）</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/24.jpg" alt="www"></p>
<p>在左边，焊盘通过两个短走线（热焊盘）连接到地平面。在右边，过孔直接连接到地平面，没有采用热焊盘。</p>
<h3 id="走线"><a href="#走线" class="headerlink" title="走线"></a>走线</h3><p><strong>走线</strong> – 在电路板上，一般连续的铜的路径。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/25.jpg" alt="www"></p>
<p> 一段连接复位点和板卡上其它地方的细走线。一个相对粗一点的走线连接了5V电源点。</p>
<h3 id="V-score"><a href="#V-score" class="headerlink" title="V-score"></a>V-score</h3><p><strong>V-score</strong> – 将板卡进行一条不完全的切割，可以将板卡通过这条直线折断。（译者注：国内常叫做“V-CUT”）</p>
<p>过孔 – 在板卡上的一个洞，一般用来将信号从一层切换到另外一层。塞孔指的是在过孔上覆盖阻焊，以防被焊接。连接器或者器件管脚过孔，因为需要焊接，一般不会进行塞孔。</p>
<p><img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/26.jpg" alt="www">  <img src="/2020/12/20/PCB%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/27.jpg" alt="www"></p>
<p>同一个PCB上塞孔的正反两面。这个过孔将正面的信号，通过在板卡上的钻孔，传输到了背面。</p>
<h3 id="波峰焊"><a href="#波峰焊" class="headerlink" title="波峰焊"></a>波峰焊</h3><p><strong>波峰焊</strong> – 一个焊接插件器件的方法。将板卡匀速的通过一个产生稳定波峰的熔融焊锡炉，焊锡的波峰会将器件管脚和暴露的焊盘焊接到一起。</p>
<p>下面将简要的介绍一下如何设计自己的PCB板卡。 </p>
<h1 id="Designing-your-own-设计自己的！"><a href="#Designing-your-own-设计自己的！" class="headerlink" title="Designing your own! 设计自己的！"></a>Designing your own! 设计自己的！</h1><p>你希望开始设计自己的PCB吗。在PCB设计中的曲曲弯弯在这边说太复杂了。不过，如果你真的想开始，下面有几个要点。</p>
<ol>
<li>找到一个CAD的工具：在PCB设计的市场里，有很多低价或者免费的选择。当找一个工具的时候，可以考虑以下几点。</li>
<li>论坛支持：有没有很多人使用这个工具？越多的人使用，你越容易找到你需要的器件的已经设计好的封装库。</li>
<li>很容易用。如果不好用的话，你也不会用。</li>
<li>性能： 很多程序对设计有限制，比如层数，器件数，以及板卡尺寸等。大部分需要你去购买授权去升级性能。</li>
<li>可抑制性： 一些免费的程序不允许导出或者迁移到其它软件，将你限制在唯一的供应商上。可能软件的低价以及便捷性值得这样的付出，但有时候不太值得。</li>
<li>去看看其他人的布板设计。开源硬件让这个事情越来越容易。</li>
<li>练习，练习，还是练习。</li>
<li>保持低的期望值。你设计的第一个板卡可能有很多问题，但是第20个可能就少很多，但是还会有一些问题。但是你很难将所有问题清除。</li>
<li>原理图相当重要。尝试去设计一个没有好的原理图支持的PCB板卡是徒劳的。</li>
</ol>
<ul>
<li>参考文章：<a href="https://www.cnblogs.com/ydvely521/category/1281622.html">https://www.cnblogs.com/ydvely521/category/1281622.html</a></li>
</ul>
]]></content>
      <categories>
        <category>PCB印制电路板</category>
      </categories>
      <tags>
        <tag>PCB</tag>
      </tags>
  </entry>
  <entry>
    <title>《苍梧谣》</title>
    <url>/2020/11/28/%E3%80%8A%E8%8B%8D%E6%A2%A7%E8%B0%A3%E3%80%8B/</url>
    <content><![CDATA[<h1 id="《苍梧谣》"><a href="#《苍梧谣》" class="headerlink" title="《苍梧谣》"></a>《苍梧谣》</h1><blockquote class="blockquote-center">
            <i class="fa fa-quote-left"></i>
            <p>乾无奈，芊芊锁链 </p>

            <i class="fa fa-quote-right"></i>
          </blockquote>
<p>天！<br>休使圆蟾照客眠。<br>人何在？<br>桂影自婵娟。</p>
]]></content>
      <categories>
        <category>诗词</category>
      </categories>
      <tags>
        <tag>文章</tag>
        <tag>诗词</tag>
      </tags>
  </entry>
  <entry>
    <title>英语例句</title>
    <url>/2020/12/04/%E8%8B%B1%E8%AF%AD/</url>
    <content><![CDATA[<h1 id="1号"><a href="#1号" class="headerlink" title="1号"></a>1号</h1><p>Now the nation’top patent court appears comlpetely reay to scale back on business-method patents, which have been controversial ever since they were first authorized 10 years ago. </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">情态动词不能作谓语。</span><br><span class="line">&#96;&#96;&#96; </span><br></pre></td></tr></table></figure>
<p>所有系动词都可以替换be动词</p>
<pre><code>
</code></pre>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>长难句</tag>
        <tag>例句</tag>
        <tag>英语</tag>
      </tags>
  </entry>
  <entry>
    <title>英语基本结构</title>
    <url>/2020/12/04/%E8%8B%B1%E8%AF%AD%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84/</url>
    <content><![CDATA[<p>注：请注意本文顺序排列。<br>再注：其实英语要注意的只有两个点，不过我才不告诉你呢，瞎猜去吧。</p>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>一句话当中有几个动词？</p>
<a id="more"></a>
<h1 id="汉英差"><a href="#汉英差" class="headerlink" title="汉英差"></a>汉英差</h1><p>汉重意：意思表达到位，随便说。<br>英重形：主谓必须到位。</p>
<h1 id="英语简单句"><a href="#英语简单句" class="headerlink" title="英语简单句"></a>英语简单句</h1><h2 id="主谓"><a href="#主谓" class="headerlink" title="主谓"></a>主谓</h2><h2 id="主谓宾"><a href="#主谓宾" class="headerlink" title="主谓宾"></a>主谓宾</h2><p>谓：实义动词</p>
<h2 id="主谓表"><a href="#主谓表" class="headerlink" title="主谓表"></a>主谓表</h2><p>谓：系动词</p>
<ol>
<li>be</li>
<li>感官动词<br>look:seem appear<br>small:n气味<br>taste:n喜<br>sound:n声音，a甜美的<br>feel</li>
<li>变化<br>become get turn grow fall</li>
<li>保持<br>keep stay remain stand<h2 id="主谓双宾"><a href="#主谓双宾" class="headerlink" title="主谓双宾"></a>主谓双宾</h2></li>
</ol>
<ul>
<li>I bought him a dog.<h2 id="主谓宾宾补"><a href="#主谓宾宾补" class="headerlink" title="主谓宾宾补"></a>主谓宾宾补</h2>宾 宾补==主（谓）宾<br>宾补修饰宾语=美丽的你</li>
<li>You should keep the room clean and tidy.</li>
</ul>
<hr>
<h1 id="谓语"><a href="#谓语" class="headerlink" title="谓语"></a>谓语</h1><p>有<em>时态</em>的<em>实义动词</em>和<em>系动词</em></p>
<h2 id="一句话当中动词能不能多-。。。不能"><a href="#一句话当中动词能不能多-。。。不能" class="headerlink" title="__一句话当中动词能不能多?__。。。不能"></a>__一句话当中动词能不能多?__。。。不能</h2><ol>
<li>谓语只能是动词。不能是名词，也不能是介词。。。</li>
<li>动词只能做谓语。不能做主语，宾语，表语。</li>
</ol>
<ul>
<li><del>Laugh</del> at others is my hobby.</li>
<li>I enjoy <del>see</del> movies.</li>
<li>My dream is <del>become</del> a rich lady.<br>summer:谓语=动词<br>一句话当中动词不能多，且只能作谓语，所有不做谓语的动词，都要变成非谓语。<br>注：以上三个句子是错的。<h2 id="练习"><a href="#练习" class="headerlink" title="练习"></a>练习</h2></li>
</ul>
<ol>
<li>他穿上外衣，锁上门，离开了家。<br>He <strong>putting</strong> on his jacket, <strong>locking</strong> the door, <strong><em>left</em></strong> home.</li>
<li>大熊猫是熊科中最罕见的成员，主要生活在中国西南部的森林里。<br>Pandas keep the rarest members in bear family, mainly living in the forest of Chinese Southwest.</li>
<li>长江流经不同的生态体系，是诸多濒危物种的栖息地，灌溉了中国5/1的土地。<br>Changjiang River <strong>flowing</strong> through diverse ecological systems, <strong><em>keeps</em></strong> the habitat of a sea of endangered species, <strong>irrigating</strong> Chinese 1/5 land.</li>
<li>我爱你，你爱我。<br>I loveing you, you love i.(独立主格)</li>
<li>冬天来了，春天就不远了。<br>Winter approaching, spring will be around the corner.</li>
<li>我是一个老师，我喜欢唱歌。<br><del>I</del> Being a teacher, i have passion for singing songs.(分词作状语)<br>注：</li>
<li>世界上为什么会有独立主格?<br>英语本来是极简单的，<strong>都是单句</strong>，只有主谓宾，主谓宾，每句写完都要点句号，而太简单的东西无法承载历史，语言学家们为了增加英语复杂度。，即把多句话合并，语言学家采用了</li>
<li>分词作状语和独立主格完全是一回事，只不过独立主格的主语不一致不能省略，分词作状语主语一致，能省略，仅此而已。</li>
</ol>
<ul>
<li>独立主格（非谓语）<br>n句话写成一句话，留一个最重要的一个动词做谓语，其它动词都变成非谓语。</li>
<li>并列句<br>加连词</li>
<li>主从句<h2 id="一句话中，动词能不能少？。。。绝对不能"><a href="#一句话中，动词能不能少？。。。绝对不能" class="headerlink" title="一句话中，动词能不能少？。。。绝对不能"></a><strong>一句话中，动词能不能少？</strong>。。。绝对不能</h2>动词就是谓语，谓语就是动词。</li>
<li>Your mather must <em>be</em> very beautiful.</li>
<li>I am <em>against</em> you.<br>summer: 当一句话需要动词而又没有动词的时候，永远都加be动词，并且be没意思。<h2 id="谓语的总结"><a href="#谓语的总结" class="headerlink" title="谓语的总结"></a>谓语的总结</h2>一句话当中，有且只能有一个有时态的实义动词或系动词，并且充当谓语。</li>
</ul>
<hr>
<h1 id="主语"><a href="#主语" class="headerlink" title="主语"></a>主语</h1><h2 id="成分：名词，代词，非谓语动词，从句-引导词-句子"><a href="#成分：名词，代词，非谓语动词，从句-引导词-句子" class="headerlink" title="成分：名词，代词，非谓语动词，从句(引导词+句子)"></a>成分：名词，代词，非谓语动词，从句(引导词+句子)</h2><ul>
<li><del>Handsome and strong are his nature.</del></li>
<li>Handsomeness and strength are his nature.(名词作主语)</li>
<li>Being handsome and strong is his nature.(非谓语做主语)<br>需要动词而又没有动词，永远都加be动词。</li>
</ul>
<h2 id="一句话当中主语能不能少？"><a href="#一句话当中主语能不能少？" class="headerlink" title="一句话当中主语能不能少？"></a>一句话当中主语能不能少？</h2><p>祈使句不是没有主语，而是为了表达说话时强烈的语气而把主语省略了。<br><strong>绝对不能</strong><br>那句子每主语怎么办？</p>
<ul>
<li>北京很冷。(没主语)</li>
</ul>
<p>1.加it作为主要： 必须与天气，温度，时间有关系。<br>机舱里很闷。<br>It feels exceedingly hot in the cabin.</p>
<ul>
<li>河南有很多人。</li>
</ul>
<p>2.there be 句型，听到“有”的时候使用。<br>(be 太老，exist/seem/remain)<br><em>有很多人喜欢我。</em><br>There exist a host of undergraduates being fascinated with with me.(写作文单词越<em>准确</em>得分越高)</p>
<ul>
<li>必须指出自信很重要</li>
</ul>
<p>3.被动：当听到一句话没有主语或人称代词作主语的时候都可以考虑写成被动。<br>Persistence must be pointed out outstandingly crusial.<br><em>越来越多的人认为过度捕捞很严重。</em><br>more than 后面接形容词或福词都翻译成非常<br>Overfishing is claimed (think,consider) more than fearful (serious) by an increasing amount of professors.</p>
<h3 id="三种情况无被动"><a href="#三种情况无被动" class="headerlink" title="三种情况无被动"></a>三种情况无被动</h3><ol>
<li>动词后有介词的无被动。</li>
<li>系动词无被动</li>
<li>have 翻译为有的意思时无被动</li>
<li>不到万不得已，不要使用人称代词作主语。</li>
</ol>
<p><em>如果有梦想，就应该会成功。</em><br>汉语式：If you have a dream, you will be success.<br>英语：If there exists a dream, glories are supposed to be achieved.<br>glorie n 荣耀<br>笨妹妹，多用高级词，开始可能很慢，习惯就快了。</p>
]]></content>
      <categories>
        <category>英语</category>
      </categories>
      <tags>
        <tag>英语</tag>
        <tag>语法</tag>
      </tags>
  </entry>
  <entry>
    <title>HEXO文章之-图片插入</title>
    <url>/2020/12/21/HEXO%E6%96%87%E7%AB%A0%E4%B9%8B-%E5%9B%BE%E7%89%87%E6%8F%92%E5%85%A5/</url>
    <content><![CDATA[<h1 id="第一步：安装插件，在hexo根目录打开Git-Bash-执行"><a href="#第一步：安装插件，在hexo根目录打开Git-Bash-执行" class="headerlink" title="第一步：安装插件，在hexo根目录打开Git Bash,执行"></a>第一步：安装插件，在hexo根目录打开Git Bash,执行</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>
<h1 id="第二步：打开hexo的配置文件-config-yml"><a href="#第二步：打开hexo的配置文件-config-yml" class="headerlink" title="第二步：打开hexo的配置文件_config.yml"></a>第二步：打开hexo的配置文件_config.yml</h1><p>找到 post_asset_folder，把这个选项从false改成true</p>
<a id="more"></a>
<h1 id="第三步：打开"><a href="#第三步：打开" class="headerlink" title="第三步：打开"></a>第三步：打开</h1><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;node_modules&#x2F;hexo-asset-image&#x2F;index.js</span><br></pre></td></tr></table></figure>
<p>将内容更换为下面的代码<br>（在此感谢Ericam_ 大神：<a href="https://blog.csdn.net/xjm850552586%EF%BC%89">https://blog.csdn.net/xjm850552586）</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#39;use strict&#39;;</span><br><span class="line">var cheerio &#x3D; require(&#39;cheerio&#39;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;14480345&#x2F;how-to-get-the-nth-occurrence-in-a-string</span><br><span class="line">function getPosition(str, m, i) &#123;</span><br><span class="line">  return str.split(m, i).join(m).length;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var version &#x3D; String(hexo.version).split(&#39;.&#39;);</span><br><span class="line">hexo.extend.filter.register(&#39;after_post_render&#39;, function(data)&#123;</span><br><span class="line">  var config &#x3D; hexo.config;</span><br><span class="line">  if(config.post_asset_folder)&#123;</span><br><span class="line">        var link &#x3D; data.permalink;</span><br><span class="line">    if(version.length &gt; 0 &amp;&amp; Number(version[0]) &#x3D;&#x3D; 3)</span><br><span class="line">       var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 1) + 1;</span><br><span class="line">    else</span><br><span class="line">       var beginPos &#x3D; getPosition(link, &#39;&#x2F;&#39;, 3) + 1;</span><br><span class="line">    &#x2F;&#x2F; In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;...&#x2F;about&#x2F;index.html&quot;.</span><br><span class="line">    var endPos &#x3D; link.lastIndexOf(&#39;&#x2F;&#39;) + 1;</span><br><span class="line">    link &#x3D; link.substring(beginPos, endPos);</span><br><span class="line"></span><br><span class="line">    var toprocess &#x3D; [&#39;excerpt&#39;, &#39;more&#39;, &#39;content&#39;];</span><br><span class="line">    for(var i &#x3D; 0; i &lt; toprocess.length; i++)&#123;</span><br><span class="line">      var key &#x3D; toprocess[i];</span><br><span class="line"> </span><br><span class="line">      var $ &#x3D; cheerio.load(data[key], &#123;</span><br><span class="line">        ignoreWhitespace: false,</span><br><span class="line">        xmlMode: false,</span><br><span class="line">        lowerCaseTags: false,</span><br><span class="line">        decodeEntities: false</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      $(&#39;img&#39;).each(function()&#123;</span><br><span class="line">        if ($(this).attr(&#39;src&#39;))&#123;</span><br><span class="line">            &#x2F;&#x2F; For windows style path, we replace &#39;\&#39; to &#39;&#x2F;&#39;.</span><br><span class="line">            var src &#x3D; $(this).attr(&#39;src&#39;).replace(&#39;\\&#39;, &#39;&#x2F;&#39;);</span><br><span class="line">            if(!&#x2F;http[s]*.*|\&#x2F;\&#x2F;.*&#x2F;.test(src) &amp;&amp;</span><br><span class="line">               !&#x2F;^\s*\&#x2F;&#x2F;.test(src)) &#123;</span><br><span class="line">              &#x2F;&#x2F; For &quot;about&quot; page, the first part of &quot;src&quot; can&#39;t be removed.</span><br><span class="line">              &#x2F;&#x2F; In addition, to support multi-level local directory.</span><br><span class="line">              var linkArray &#x3D; link.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                return elem !&#x3D; &#39;&#39;;</span><br><span class="line">              &#125;);</span><br><span class="line">              var srcArray &#x3D; src.split(&#39;&#x2F;&#39;).filter(function(elem)&#123;</span><br><span class="line">                return elem !&#x3D; &#39;&#39; &amp;&amp; elem !&#x3D; &#39;.&#39;;</span><br><span class="line">              &#125;);</span><br><span class="line">              if(srcArray.length &gt; 1)</span><br><span class="line">                srcArray.shift();</span><br><span class="line">              src &#x3D; srcArray.join(&#39;&#x2F;&#39;);</span><br><span class="line">              $(this).attr(&#39;src&#39;, config.root + link + src);</span><br><span class="line">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span><br><span class="line">            console.info&amp;&amp;console.info($(this));</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      data[key] &#x3D; $.html();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<h1 id="第四步：现在就可以插入图片了，比如hexo-new-post-photo之后"><a href="#第四步：现在就可以插入图片了，比如hexo-new-post-photo之后" class="headerlink" title="第四步：现在就可以插入图片了，比如hexo new post photo之后"></a>第四步：现在就可以插入图片了，比如hexo new post photo之后</h1><p>就在source/_posts生成photo.md文件和photo文件夹，我们把要插入的图片复制到photo文件夹内，<br>在photo.md文件里面按markdown的标准写,（我的文件名是head.jpeg）比如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![这是代替图片的文字，随便写](head.jpeg)</span><br></pre></td></tr></table></figure>
<p>参考链接：<a href="https://www.jianshu.com/p/f72aaad7b852">https://www.jianshu.com/p/f72aaad7b852</a></p>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
</search>
